using UnityEngine;using System.Collections;/** * Generic class for player character */public class PlayerCharacter : MonoBehaviour{	public GameManager.ePlayers player; 	protected GameManager.eColors color;	protected GameObject button;	protected LevelManager lvm;	protected Animator animator;	protected RuntimeAnimatorController animCtrl;	void Start ()	{		if (GameManager.Instance.IsPlaying (player)) {			lvm = GameObject.Find ("LevelManager").GetComponent<LevelManager> ();			lvm.OnTimeIsUp += EndPlayer;			lvm.OnStart += StartPlayer;			lvm.OnShowMedals += ShowMedal;									button = GameObject.Find ("btn_" + player.ToString ());			button.GetComponent<BtnHandler> ().OnPressed += Pressed;			button.GetComponent<BtnHandler> ().OnReleased += Released;			lvm.OnPause += button.GetComponent<BtnHandler> ().DisableButton;			lvm.OnResume += button.GetComponent<BtnHandler> ().EnableButton;			color = GameManager.Instance.GetColor (player);			animCtrl = Resources.Load <RuntimeAnimatorController> ("Sprites/Characters/" + color.ToString () + "/" + color.ToString () + "_anim");			animator = GetComponent<Animator> ();						animator.runtimeAnimatorController = animCtrl;			Initialize ();		}	}	/**	 * Method called when the player is created	 */	protected virtual void Initialize ()	{	}	/**	 * Method called when the player's button is pressed	 */	protected virtual void Pressed ()	{	}		/**	 * Method called when the player's button is released	 */	protected virtual void Released ()	{	}	/**	 * Method called when the countdown is finished	 */	protected virtual void StartPlayer ()	{	}	/**	 * Method called when the time is up	 */	protected void EndPlayer ()	{		animator.SetBool ("isLoading", false);		animator.SetBool ("isShooting", false);		animator.SetBool ("isHitted", false);	}	/**	 * Method called before the podium, to show medals on the scene	 */	protected void ShowMedal ()	{		try {			int num_players = GameManager.Instance.GetNumPlayer ();			if (num_players == 1 || lvm.getPodium (num_players - 1) != this.player) {				//IF SINGLE PLAYER OR NOT LAST PLAYER				animator.SetBool ("isWinner", true);			} else {				//IF LAST PLAYER				animator.SetBool ("isLoser", true);			}						GameObject medal = Resources.Load<GameObject> ("Prefabs/Medal_" + lvm.GetPosition (player));			GameObject medalInstance = Instantiate (medal) as GameObject;			medalInstance.GetComponent<MedalMovement> ().enabled = true;			medalInstance.transform.position = transform.position + new Vector3 (0, 0, 1);		} catch {			//IF NO MEDAL ACHIEVED			animCtrl = Resources.Load <RuntimeAnimatorController> ("Sprites/Podium/" + color.ToString () + "_podium_loser");			animator = GetComponent<Animator> ();						animator.runtimeAnimatorController = animCtrl;		}	}	public GameManager.eColors Color {		get {			return color;		}		set {			color = value;		}	}}