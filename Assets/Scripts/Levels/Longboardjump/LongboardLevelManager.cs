using UnityEngine;using System.Collections;using System.Collections.Generic;using System.Linq;/** * Longboard Level Manager */public class LongboardLevelManager : MonoBehaviour{			private int num_players;	private LevelManager lvm;	private List<GameManager.ePlayers> notClassified;	private float[] distances;	float[] times;	private int finished = 0;	void Start ()	{		if (MusicManager.Instance.Source.clip != Resources.Load<AudioClip> (MusicManager.songs [0])) {			MusicManager.Instance.Source.Stop ();			MusicManager.Instance.Source.clip = Resources.Load<AudioClip> (MusicManager.songs [0]);			MusicManager.Instance.Source.Play ();		}		lvm = gameObject.GetComponent<LevelManager> ();		num_players = GameManager.Instance.GetNumPlayer ();		distances = new float[num_players];		times = new float[num_players];		notClassified = new List<GameManager.ePlayers> ();	}		public void Score (GameManager.ePlayers player, float distance)	{		finished++;		if (distance == 0)			notClassified.Add (player);		else {			distances [player.GetHashCode ()] = distance;			times [player.GetHashCode ()] = Time.time;		}		if (finished == num_players)			Finish ();	}	void Finish ()	{		if (notClassified.Count == num_players)			Debug.Log ("NO BODY CLASSIFIED");		else			CheckPodium ();		lvm.FinishGame ();	}	void CheckPodium ()	{		for (int player=0; player<num_players; player++) {			float max = distances.Max ();			if (max == 0)				return;			float min_time = Time.time + 1;			GameManager.ePlayers winner = GameManager.ePlayers.none;			for (int i=0; i<distances.Length; i++) {				if (distances [i] == max && times [i] < min_time) {					winner = (GameManager.ePlayers)i;					min_time = times [i];				}			}			if (winner != GameManager.ePlayers.none) {				distances [winner.GetHashCode ()] = -1;				times [winner.GetHashCode ()] = -1;				lvm.setPodium (winner, player);			}		}	}}