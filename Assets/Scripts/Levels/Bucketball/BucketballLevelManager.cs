using UnityEngine;using System.Collections;using System.Collections.Generic;using System.Linq;/** * Bucketball Level Manager */public class BucketballLevelManager : MonoBehaviour{			int[] points;	float[] times;	private const float START_SEC = 30;	private float seconds;	private int num_players;	private LevelManager lvm;	private ScreenManager uim;	private Timebar timebar;	void Awake ()	{		MusicManager.Instance.Source.Stop ();		MusicManager.Instance.Source.clip = Resources.Load<AudioClip> (MusicManager.songs [1]);		MusicManager.Instance.Source.Play ();	}	void Start ()	{		lvm = gameObject.GetComponent<LevelManager> ();		uim = gameObject.GetComponent<ScreenManager> ();		num_players = GameManager.Instance.GetNumPlayer ();		timebar = GameObject.Find ("Timebar").GetComponent<Timebar> ();		seconds = START_SEC;		//init points		points = new int[num_players];		times = new float[num_players];		for (int i=0; i<num_players; i++) {			points [i] = 0; 			times [i] = 0; 		}				lvm.OnStart += StartTimer;		lvm.OnFinish += FindWinners;	}	void StartTimer ()	{		InvokeRepeating ("Timer", 0.1f, 0.1f);	}	void Timer ()	{		float perc = (START_SEC - seconds) / START_SEC;		timebar.setPercentage (perc);		seconds -= 0.1f;		if (seconds <= 0) {			lvm.FinishGame ();			CancelInvoke ("Timer");			return;		}	}	void FindWinners ()	{		for (int pos=0; pos<num_players; pos++) {			int max = points.Max ();			if (max == 0)				return;			float min_time = Time.time;			GameManager.ePlayers winner = (GameManager.ePlayers)pos;			for (int i=0; i<points.Length; i++) {				if (points [i] == max && times [i] < min_time) {					winner = (GameManager.ePlayers)i;					min_time = times [i];				}			}			points [winner.GetHashCode ()] = -1;			times [winner.GetHashCode ()] = -1;			lvm.setPodium (winner, pos);		}	}	public void Score (GameManager.ePlayers player)	{		int pts = ++points [player.GetHashCode ()];		uim.score (player, pts);		times [player.GetHashCode ()] = Time.time;	}}